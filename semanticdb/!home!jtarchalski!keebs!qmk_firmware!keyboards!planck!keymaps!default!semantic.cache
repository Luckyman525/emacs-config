;; Object semanticdb-project-database-file-15673e8ecb3c
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-15673e8ecb3c"
  :tables
  (list
    (semanticdb-table "semanticdb-table-15673e8ecb48"
      :major-mode c-mode
      :tags 
        '( ("muse.h" include nil nil [715 732])
            ("keymap_config" variable
               (:typemodifiers ("extern")
                :type ("keymap_config_t" type (:type "class") nil nil))
                nil [734 771])
            ("planck_layers" type
               (:members 
                  ( ("_QWERTY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [796 804])
                    ("_COLEMAK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [807 816])
                    ("_DVORAK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [819 827])
                    ("_LOWER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [830 837])
                    ("_RAISE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [840 847])
                    ("_PLOVER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [850 858])
                    ("_ADJUST" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [861 870]))                  
                :type "enum")
                nil [773 871])
            ("planck_keycodes" type
               (:members 
                  ( ("QWERTY" variable
                       (:constant-flag t
                        :default-value (907 917)
                        :type "int")
                        (reparse-symbol enumsubparts) [898 917])
                    ("COLEMAK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [921 929])
                    ("DVORAK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [932 939])
                    ("PLOVER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [942 949])
                    ("BACKLIT" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [952 960])
                    ("EXT_PLV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [963 972]))                  
                :type "enum")
                nil [873 973])
            ("LOWER" variable (:constant-flag t) nil [983 988])
            ("RAISE" variable (:constant-flag t) nil [1008 1013])
            ("keymaps" variable
               (:dereference 3
                :default-value "{

/* Qwerty
 * ,-----------------------------------------------------------------------------------.
 * | Tab  |   Q  |   W  |   E  |   R  |   T  |   Y  |   U  |   I  |   O  |   P  | Bksp |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Esc  |   A  |   S  |   D  |   F  |   G  |   H  |   J  |   K  |   L  |   ;  |  \"   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   V  |   B  |   N  |   M  |   ,  |   .  |   /  |Enter |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Brite| Ctrl | Alt  | GUI  |Lower |    Space    |Raise | Left | Down |  Up  |Right |
 * `-----------------------------------------------------------------------------------'
 */
[_QWERTY] = LAYOUT_planck_grid(
    KC_TAB,  KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,    KC_Y,    KC_U,    KC_I,    KC_O,    KC_P,    KC_BSPC,
    KC_ESC,  KC_A,    KC_S,    KC_D,    KC_F,    KC_G,    KC_H,    KC_J,    KC_K,    KC_L,    KC_SCLN, KC_QUOT,
    KC_LSFT, KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_N,    KC_M,    KC_COMM, KC_DOT,  KC_SLSH, KC_ENT ,
    BACKLIT, KC_LCTL, KC_LALT, KC_LGUI, LOWER,   KC_SPC,  KC_SPC,  RAISE,   KC_LEFT, KC_DOWN, KC_UP,   KC_RGHT
),

/* Colemak
 * ,-----------------------------------------------------------------------------------.
 * | Tab  |   Q  |   W  |   F  |   P  |   G  |   J  |   L  |   U  |   Y  |   ;  | Bksp |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Esc  |   A  |   R  |   S  |   T  |   D  |   H  |   N  |   E  |   I  |   O  |  \"   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   V  |   B  |   K  |   M  |   ,  |   .  |   /  |Enter |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Brite| Ctrl | Alt  | GUI  |Lower |    Space    |Raise | Left | Down |  Up  |Right |
 * `-----------------------------------------------------------------------------------'
 */
[_COLEMAK] = LAYOUT_planck_grid(
    KC_TAB,  KC_Q,    KC_W,    KC_F,    KC_P,    KC_G,    KC_J,    KC_L,    KC_U,    KC_Y,    KC_SCLN, KC_BSPC,
    KC_ESC,  KC_A,    KC_R,    KC_S,    KC_T,    KC_D,    KC_H,    KC_N,    KC_E,    KC_I,    KC_O,    KC_QUOT,
    KC_LSFT, KC_Z,    KC_X,    KC_C,    KC_V,    KC_B,    KC_K,    KC_M,    KC_COMM, KC_DOT,  KC_SLSH, KC_ENT ,
    BACKLIT, KC_LCTL, KC_LALT, KC_LGUI, LOWER,   KC_SPC,  KC_SPC,  RAISE,   KC_LEFT, KC_DOWN, KC_UP,   KC_RGHT
),

/* Dvorak
 * ,-----------------------------------------------------------------------------------.
 * | Tab  |   \"  |   ,  |   .  |   P  |   Y  |   F  |   G  |   C  |   R  |   L  | Bksp |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Esc  |   A  |   O  |   E  |   U  |   I  |   D  |   H  |   T  |   N  |   S  |  /   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Shift|   ;  |   Q  |   J  |   K  |   X  |   B  |   M  |   W  |   V  |   Z  |Enter |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Brite| Ctrl | Alt  | GUI  |Lower |    Space    |Raise | Left | Down |  Up  |Right |
 * `-----------------------------------------------------------------------------------'
 */
[_DVORAK] = LAYOUT_planck_grid(
    KC_TAB,  KC_QUOT, KC_COMM, KC_DOT,  KC_P,    KC_Y,    KC_F,    KC_G,    KC_C,    KC_R,    KC_L,    KC_BSPC,
    KC_ESC,  KC_A,    KC_O,    KC_E,    KC_U,    KC_I,    KC_D,    KC_H,    KC_T,    KC_N,    KC_S,    KC_SLSH,
    KC_LSFT, KC_SCLN, KC_Q,    KC_J,    KC_K,    KC_X,    KC_B,    KC_M,    KC_W,    KC_V,    KC_Z,    KC_ENT ,
    BACKLIT, KC_LCTL, KC_LALT, KC_LGUI, LOWER,   KC_SPC,  KC_SPC,  RAISE,   KC_LEFT, KC_DOWN, KC_UP,   KC_RGHT
),

/* Lower
 * ,-----------------------------------------------------------------------------------.
 * |   ~  |   !  |   @  |   #  |   $  |   %  |   ^  |   &  |   *  |   (  |   )  | Bksp |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Del  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |   _  |   +  |   {  |   }  |  |   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |  F7  |  F8  |  F9  |  F10 |  F11 |  F12 |ISO ~ |ISO | | Home | End  |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |             |      | Next | Vol- | Vol+ | Play |
 * `-----------------------------------------------------------------------------------'
 */
[_LOWER] = LAYOUT_planck_grid(
    KC_TILD, KC_EXLM, KC_AT,   KC_HASH, KC_DLR,  KC_PERC, KC_CIRC, KC_AMPR,    KC_ASTR,    KC_LPRN, KC_RPRN, KC_BSPC,
    KC_DEL,  KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_UNDS,    KC_PLUS,    KC_LCBR, KC_RCBR, KC_PIPE,
    _______, KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  S(KC_NUHS), S(KC_NUBS), KC_HOME, KC_END,  _______,
    _______, _______, _______, _______, _______, _______, _______, _______,    KC_MNXT,    KC_VOLD, KC_VOLU, KC_MPLY
),

/* Raise
 * ,-----------------------------------------------------------------------------------.
 * |   `  |   1  |   2  |   3  |   4  |   5  |   6  |   7  |   8  |   9  |   0  | Bksp |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Del  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |   -  |   =  |   [  |   ]  |  \\   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |  F7  |  F8  |  F9  |  F10 |  F11 |  F12 |ISO # |ISO / |Pg Up |Pg Dn |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |             |      | Next | Vol- | Vol+ | Play |
 * `-----------------------------------------------------------------------------------'
 */
[_RAISE] = LAYOUT_planck_grid(
    KC_GRV,  KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    KC_0,    KC_BSPC,
    KC_DEL,  KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_MINS, KC_EQL,  KC_LBRC, KC_RBRC, KC_BSLS,
    _______, KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12,  KC_NUHS, KC_NUBS, KC_PGUP, KC_PGDN, _______,
    _______, _______, _______, _______, _______, _______, _______, _______, KC_MNXT, KC_VOLD, KC_VOLU, KC_MPLY
),

/* Plover layer (http://opensteno.org)
 * ,-----------------------------------------------------------------------------------.
 * |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |   S  |   T  |   P  |   H  |   *  |   *  |   F  |   P  |   L  |   T  |   D  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |   S  |   K  |   W  |   R  |   *  |   *  |   R  |   B  |   G  |   S  |   Z  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Exit |      |      |   A  |   O  |             |   E  |   U  |      |      |      |
 * `-----------------------------------------------------------------------------------'
 */
[_PLOVER] = LAYOUT_planck_grid(
    KC_1,    KC_1,    KC_1,    KC_1,    KC_1,    KC_1,    KC_1,    KC_1,    KC_1,    KC_1,    KC_1,    KC_1   ,
    XXXXXXX, KC_Q,    KC_W,    KC_E,    KC_R,    KC_T,    KC_Y,    KC_U,    KC_I,    KC_O,    KC_P,    KC_LBRC,
    XXXXXXX, KC_A,    KC_S,    KC_D,    KC_F,    KC_G,    KC_H,    KC_J,    KC_K,    KC_L,    KC_SCLN, KC_QUOT,
    EXT_PLV, XXXXXXX, XXXXXXX, KC_C,    KC_V,    XXXXXXX, XXXXXXX, KC_N,    KC_M,    XXXXXXX, XXXXXXX, XXXXXXX
),

/* Adjust (Lower + Raise)
 * ,-----------------------------------------------------------------------------------.
 * |      | Reset|      |      |      |      |      |      |      |      |      |  Del |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |Aud on|Audoff|AGnorm|AGswap|Qwerty|Colemk|Dvorak|Plover|      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |Voice-|Voice+|Mus on|Musoff|MIDIon|MIDIof|      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |             |      |      |      |      |      |
 * `-----------------------------------------------------------------------------------'
 */
[_ADJUST] = LAYOUT_planck_grid(
    _______, RESET,   DEBUG,   RGB_TOG, RGB_MOD, RGB_HUI, RGB_HUD, RGB_SAI, RGB_SAD,  RGB_VAI, RGB_VAD, KC_DEL ,
    _______, _______, MU_MOD,  AU_ON,   AU_OFF,  AG_NORM, AG_SWAP, QWERTY,  COLEMAK,  DVORAK,  PLOVER,  _______,
    _______, MUV_DE,  MUV_IN,  MU_ON,   MU_OFF,  MI_ON,   MI_OFF,  TERM_ON, TERM_OFF, _______, _______, _______,
    _______, _______, _______, _______, _______, _______, _______, _______, _______,  _______, _______, _______
)

}"
                :type ("PROGMEM" type (:type "class") nil nil))
                nil [1041 10248])
            ("layer_state_set_user" function
               (:arguments 
                  ( ("state" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10418 10433]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [10388 10502])
            ("process_record_user" function
               (:arguments 
                  ( ("keycode" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10529 10546])
                    ("record" variable
                       (:pointer 1
                        :type ("keyrecord_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [10547 10567]))                  
                :type "bool")
                nil [10504 12257])
            ("muse_mode" variable
               (:default-value "false"
                :type "bool")
                nil [12259 12282])
            ("last_muse_note" variable
               (:default-value "0"
                :type ("uint8_t" type (:type "class") nil nil))
                nil [12283 12310])
            ("muse_counter" variable
               (:default-value "0"
                :type ("uint16_t" type (:type "class") nil nil))
                nil [12311 12337])
            ("muse_offset" variable
               (:default-value "70"
                :type ("uint8_t" type (:type "class") nil nil))
                nil [12338 12363])
            ("muse_tempo" variable
               (:default-value "50"
                :type ("uint16_t" type (:type "class") nil nil))
                nil [12364 12389])
            ("encoder_update" function
               (:arguments 
                  ( ("clockwise" variable (:type "bool") (reparse-symbol arg-sub-list) [12411 12426]))                  
                :type "void")
                nil [12391 12964])
            ("dip_update" function
               (:arguments 
                  ( ("index" variable (:type ("uint8_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12982 12996])
                    ("active" variable (:type "bool") (reparse-symbol arg-sub-list) [12997 13009]))                  
                :type "void")
                nil [12966 13496])
            ("matrix_scan_user" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [13520 13525]))                  
                :type "void")
                nil [13498 13970])
            ("music_mask_user" function
               (:arguments 
                  ( ("keycode" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13993 14010]))                  
                :type "bool")
                nil [13972 14123]))          
      :file "keymap.c"
      :pointmax 14124
      :fsize 14123
      :lastmodtime '(23858 13367 138166 414000)
      :unmatched-syntax '((symbol 1032 . 1040) (CONST 1026 . 1031) (symbol 700 . 714) (symbol 692 . 699) (punctuation 691 . 692))
      :lexical-table 
        '(("LOWER" . ((symbol "MO" 989 . 991) (semantic-list "(_LOWER)" 991 . 999)))
          ("RAISE" . ((symbol "MO" 1014 . 1016) (semantic-list "(_RAISE)" 1016 . 1024)))
          )
))
  :file "!home!jtarchalski!keebs!qmk_firmware!keyboards!planck!keymaps!default!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
