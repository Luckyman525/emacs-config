;; Object semanticdb-project-database-file-15610df7fb7c
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-15610df7fb7c"
  :tables
  (list
    (semanticdb-table "semanticdb-table-15610df7fb5c"
      :major-mode c-mode
      :tags 
        '( ("preonic.h" include nil nil [670 690])
            ("keymap_steno.h" include nil nil [691 716])
            ("olkb_layers" type
               (:members 
                  ( ("_COLEMAK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [739 748])
                    ("_PDVORAK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [751 760])
                    ("_PLOVER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [763 771])
                    ("_GAMING" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [774 782])
                    ("_UNICODE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [785 794])
                    ("_LOWER" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [797 804])
                    ("_RAISE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [807 814])
                    ("_ADJUST" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [817 825]))                  
                :type "enum")
                nil [718 828])
            ("olkb_keycodes" type
               (:members 
                  ( ("COLEMAK" variable
                       (:constant-flag t
                        :default-value (863 873)
                        :type "int")
                        (reparse-symbol enumsubparts) [853 873])
                    ("PDVORAK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [877 885])
                    ("TFLIP" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [888 894])
                    ("LENNY" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [897 903])
                    ("DF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [906 912])
                    ("MO" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [916 923])
                    ("MO" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [927 932])
                    ("MO" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [936 941])
                    ("DF" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [945 951])
                    ("EXT_PLV" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [955 963])
                    ("EXT_GMG" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [966 974]))                  
                :type "enum")
                nil [830 977])
            ("unicode_names" type
               (:members 
                  ( ("SNEK" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1002 1007])
                    ("VOL" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [1010 1014]))                  
                :type "enum")
                nil [979 1017])
            ("unicode_map" variable
               (:dereference 1
                :default-value "{
  [SNEK] = 0x1F40D,
  [VOL]  = 0x1F50A,
}"
                :type ("PROGMEM" type (:type "class") nil nil))
                nil [1034 1102])
            ("LOWER" variable (:constant-flag t) nil [1112 1117])
            ("RAISE" variable (:constant-flag t) nil [1137 1142])
            ("ST_BOLT" variable (:constant-flag t) nil [1162 1169])
            ("ST_GEM" variable (:constant-flag t) nil [1192 1198])
            ("LOWESC" variable (:constant-flag t) nil [1224 1230])
            ("ENTALT" variable (:constant-flag t) nil [1258 1264])
            ("UNICODE" variable (:constant-flag t) nil [1294 1301])
            ("UCODE" variable (:constant-flag t) nil [1323 1328])
            ("ADJ" variable (:constant-flag t) nil [1351 1354])
            ("GAMING" variable (:constant-flag t) nil [1375 1381])
            ("PLOVER" variable (:constant-flag t) nil [1402 1408])
            ("SFT" variable (:constant-flag t) nil [1429 1432])
            ("CTL" variable (:constant-flag t) nil [1450 1453])
            ("GUI" variable (:constant-flag t) nil [1471 1474])
            ("POUND" variable (:constant-flag t) nil [1492 1497])
            ("WSPC1" variable (:constant-flag t) nil [1517 1522])
            ("WSPC2" variable (:constant-flag t) nil [1542 1547])
            ("WSPC3" variable (:constant-flag t) nil [1567 1572])
            ("WSPC4" variable (:constant-flag t) nil [1592 1597])
            ("WSPC5" variable (:constant-flag t) nil [1617 1622])
            ("WSPC6" variable (:constant-flag t) nil [1642 1647])
            ("WSPC7" variable (:constant-flag t) nil [1667 1672])
            ("WSPC8" variable (:constant-flag t) nil [1692 1697])
            ("WSPC9" variable (:constant-flag t) nil [1717 1722])
            ("WSPC0" variable (:constant-flag t) nil [1742 1747])
            ("keymaps" variable
               (:dereference 3
                :default-value "{


/* Colemak
 * ,-----------------------------------------------------------------------------------.
 * | Esc  |   1  |   2  |   3  |   4  |   5  |   6  |   7  |   8  |   9  |   0  |  Del |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Tab  |   Q  |   W  |   F  |   P  |   B  |   J  |   L  |   U  |   Y  |   '  |  #   |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * | Bspc |   A  |   R  |   S  |   T  |   G  |   K  |   N  |   E  |   I  |   O  |  ;   |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   D  |   V  |   M  |   H  |   ,  |   .  |   /  | Shift|
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Ctrl |   \\  | UCODE|  GUI |Lower | Enter| Space| Raise| Left | Down |  Up  | Right|
 * `-----------------------------------------------------------------------------------'
 */
[_COLEMAK] = {
  {KC_GRV,  KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    KC_0,    KC_DEL  },
  {KC_TAB,  KC_Q,    KC_W,    KC_F,    KC_P,    KC_B,    KC_J,    KC_L,    KC_U,    KC_Y,    KC_QUOT, KC_NUHS },
  {KC_BSPC, KC_A,    KC_R,    KC_S,    KC_T,    KC_G,    KC_K,    KC_N,    KC_E,    KC_I,    KC_O,    KC_SCLN },
  {KC_LSPO, KC_Z,    KC_X,    KC_C,    KC_D,    KC_V,    KC_M,    KC_H,    KC_COMM, KC_DOT,  KC_SLSH, KC_RSPC },
  {KC_LCTL, KC_NUBS, UNICODE, KC_RGUI, LOWESC,  ENTALT,  KC_SPC,  RAISE,   KC_LEFT, KC_DOWN, KC_UP,   KC_RGHT }
},

/* Plover layer (http://opensteno.org)
 * ,-----------------------------------------------------------------------------------.
 * | Exit |      |      |      |      |      |      |      |      |      |TXBOLT|GEMiNI|
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * |      |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |   #  |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * |  FN  |   S  |   T  |   P  |   H  |   *  |   *  |   F  |   P  |   L  |   T  |   D  |
 * |------+------+------+------+------+------|------+------+------+------+------+------|
 * |      |   S  |   K  |   W  |   R  |   *  |   *  |   R  |   B  |   G  |   S  |   Z  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |   U  |   O  |      |      |   E  |   U  |  PWR | RES1 | RES2 |
 * `-----------------------------------------------------------------------------------'
 */
[_PLOVER] = {
  {ADJ,     KC_NO,   KC_NO,   KC_NO,   KC_NO,   KC_NO,   KC_NO,   KC_NO,   KC_NO,   KC_NO,   ST_BOLT, ST_GEM },
  {KC_NO,   STN_N1,  STN_N2,  STN_N3,  STN_N4,  STN_N5,  STN_N6,  STN_N7,  STN_N8,  STN_N9,  STN_NA,  STN_NB },
  {STN_FN,  STN_S1,  STN_TL,  STN_PL,  STN_HL,  STN_ST1, STN_ST3, STN_FR,  STN_PR,  STN_LR,  STN_TR,  STN_DR },
  {KC_NO,   STN_S2,  STN_KL,  STN_WL,  STN_RL,  STN_ST2, STN_ST4, STN_RR,  STN_BR,  STN_GR,  STN_SR,  STN_ZR },
  {KC_NO,   KC_NO,   KC_NO,   STN_A,   STN_O,   KC_NO,   KC_NO,   STN_E,   STN_U,   STN_PWR, STN_RE1, STN_RE2}
},

/* UNICODE
 * ,-----------------------------------------------------------------------------------.
 * | SNEK | TFLIP| LENNY|      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------|------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * `-----------------------------------------------------------------------------------'
 */
[_UNICODE] = {
  {X(SNEK), TFLIP,   LENNY,   X(VOL),  _______, _______, _______, _______, _______, _______, _______, _______},
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {_______, _______, _______, _______, _______, UC_M_WC, UC_M_LN, _______, _______, _______, _______, _______}
},

/* GAMING
 * ,-----------------------------------------------------------------------------------.
 * |  ESC |   1  |   2  |   3  |   4  |   5  |   6  |   7  |   8  |   9  |   0  |ADJUST|
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Tab  |   Q  |   W  |   F  |   P  |   B  |   J  |   L  |   U  |   Y  |   '  |   #  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | BKSPC|   A  |   R  |   S  |   T  |   G  |   K  |   N  |   E  |   I  |   O  |   ;  |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Shift|   Z  |   X  |   C  |   D  |   V  |   M  |   H  |   ,  |   .  |   /  |Enter |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * | Ctrl |   \\  |LOWER |RAISE | LAlt | Space|  F13 |  F14 | Left | Down |  Up  |Right |
 * `-----------------------------------------------------------------------------------'
 */
[_GAMING] = {
  {KC_ESC,  KC_1,    KC_2,    KC_3,    KC_4,    KC_5,    KC_6,    KC_7,    KC_8,    KC_9,    KC_0,    ADJ    },
  {KC_TAB,  KC_Q,    KC_W,    KC_F,    KC_P,    KC_B,    KC_J,    KC_L,    KC_U,    KC_Y,    KC_QUOT, KC_NUHS},
  {KC_BSPC, KC_A,    KC_R,    KC_S,    KC_T,    KC_G,    KC_K,    KC_N,    KC_E,    KC_I,    KC_O,    KC_SCLN},
  {KC_LSFT, KC_Z,    KC_X,    KC_C,    KC_D,    KC_V,    KC_M,    KC_H,    KC_COMM, KC_DOT,  KC_SLSH, KC_ENT },
  {KC_LCTL, KC_NUBS, LOWER,   RAISE,   KC_LALT, KC_SPC,  KC_F13,  KC_F14,  KC_LEFT,  KC_DOWN, KC_UP,   KC_RGHT}
},

/* Lower
 * ,-----------------------------------------------------------------------------------.
 * |      |      |      |      |      |      |      |      |      |      |      |TrmON |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * |      | WSPC1| WSPC2| WSPC3| WSPC4| WSPC5| WSPC6| WSPC7| WSPC8| WSPC9| WSPC0|TrmOff|
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * | Caps | HOME | PGDN | PGUP | END  |      |      |   -  |   =  |   [  |   ]  |      |
 * |------+------+------+------+------+------|------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |UCODE |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |PrtScr|
 * `-----------------------------------------------------------------------------------'
 */
[_LOWER] = {
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, TERM_ON},
  {_______, WSPC1,   WSPC2,   WSPC3,   WSPC4,   WSPC5,   WSPC6,   WSPC7,   WSPC8,   WSPC9,   WSPC0,   TERM_OFF},
  {KC_CAPS, KC_HOME, KC_PGDN, KC_PGUP, KC_END,  _______, _______, KC_MINS, KC_EQL,  KC_LBRC, KC_RBRC, _______},
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, UCODE  },
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, KC_PSCR}
},

/* Raise
 * ,-----------------------------------------------------------------------------------.
 * |   F1 |   F2 |   F3 |   F4 |   F5 |   F6 |   F7 |   F8 |   F9 |   F10|   F11|   F12|
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * | Caps |   !  |   \"  |   £  |   $  |   %  |   ^  |   &  |   *  |   (  |   )  |   `  |
 * |------+------+------+------+------+------|------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |      |      |      | AltGr|      |SuperL|      |      | Next | Vol- | Vol+ | Play |
 * `-----------------------------------------------------------------------------------'
 */
[_RAISE] = {
  {KC_F1,   KC_F2,   KC_F3,   KC_F4,   KC_F5,   KC_F6,   KC_F7,   KC_F8,   KC_F9,   KC_F10,  KC_F11,  KC_F12 },
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {KC_CAPS, KC_EXLM, KC_AT,   POUND,   KC_DLR,  KC_PERC, KC_CIRC, KC_AMPR, KC_ASTR, KC_LPRN, KC_RPRN, KC_GRV },
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {_______, _______, _______, KC_ALGR, _______, KC_LGUI, _______, _______, KC_MNXT, KC_VOLD, KC_VOLU, KC_MPLY}
},

/* Adjust (Lower + Raise)
 * ,-----------------------------------------------------------------------------------.
 * |EEPRST|      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * |      | Reset| Debug|      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+-------------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------|------+------+------+------+------+------|
 * |      |      |      |      |      |      |      |      |      |      |      |      |
 * |------+------+------+------+------+------+------+------+------+------+------+------|
 * |SYSOFF|SLEEP |WAKE  |      |      |      |      |      |      |PLOVER|GAMING| CMAK |
 * `-----------------------------------------------------------------------------------'
 */
[_ADJUST] = {
  {EEP_RST, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {_______, RESET,   DEBUG,   _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {_______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______, _______},
  {KC_PWR,  KC_SLEP, KC_WAKE, _______, _______, _______, _______, _______, _______, PLOVER,  GAMING,  COLEMAK}
},


}"
                :type ("PROGMEM" type (:type "class") nil nil))
                nil [1775 12870])
            ("layer_state_set_user" function
               (:arguments 
                  ( ("state" variable (:type ("uint32_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12902 12917]))                  
                :type ("uint32_t" type (:type "class") nil nil))
                nil [12872 12986])
            ("process_record_user" function
               (:arguments 
                  ( ("keycode" variable (:type ("uint16_t" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13013 13030])
                    ("record" variable
                       (:pointer 1
                        :type ("keyrecord_t" type (:type "class") nil nil))
                        (reparse-symbol arg-sub-list) [13031 13051]))                  
                :type "bool")
                nil [12988 14249]))          
      :file "keymap.c"
      :pointmax 14251
      :fsize 14251
      :lastmodtime '(24042 3191 430522 632000)
      :unmatched-syntax '((punctuation 14249 . 14250) (symbol 1766 . 1774) (CONST 1760 . 1765) (symbol 1025 . 1033) (CONST 1019 . 1024) (semantic-list "(_GAMING)" 945 . 951) (semantic-list "(_RAISE)" 936 . 941) (semantic-list "(_LOWER)" 927 . 932) (semantic-list "(_UNICODE)" 916 . 923) (semantic-list "(_PLOVER)" 906 . 912) (punctuation 14249 . 14250) (symbol 1766 . 1774) (CONST 1760 . 1765) (symbol 1025 . 1033) (CONST 1019 . 1024) (semantic-list "(_GAMING)" 945 . 951) (semantic-list "(_RAISE)" 936 . 941) (semantic-list "(_LOWER)" 927 . 932) (semantic-list "(_UNICODE)" 916 . 923) (semantic-list "(_PLOVER)" 906 . 912))
      :lexical-table 
        '(("WSPC0" . ((symbol "RGUI" 1748 . 1752) (semantic-list "(KC_0)" 1752 . 1758)))
          ("LOWER" . ((symbol "MO" 1118 . 1120) (semantic-list "(_LOWER)" 1120 . 1128)))
          ("GAMING" . ((symbol "DF" 1382 . 1384) (semantic-list "(_GAMING)" 1384 . 1393)))
          ("SFT" . ((symbol "MOD_LSFT" 1433 . 1441)))
          ("WSPC1" . ((symbol "RGUI" 1523 . 1527) (semantic-list "(KC_1)" 1527 . 1533)))
          ("ST_GEM" . ((symbol "QK_STENO_GEMINI" 1200 . 1215)))
          ("WSPC2" . ((symbol "RGUI" 1548 . 1552) (semantic-list "(KC_2)" 1552 . 1558)))
          ("ST_BOLT" . ((symbol "QK_STENO_BOLT" 1170 . 1183)))
          ("ENTALT" . ((symbol "MT" 1265 . 1267) (semantic-list "(MOD_LALT, KC_ENT)" 1267 . 1285)))
          ("UNICODE" . ((symbol "MO" 1302 . 1304) (semantic-list "(_UNICODE)" 1304 . 1314)))
          ("WSPC3" . ((symbol "RGUI" 1573 . 1577) (semantic-list "(KC_3)" 1577 . 1583)))
          ("WSPC4" . ((symbol "RGUI" 1598 . 1602) (semantic-list "(KC_4)" 1602 . 1608)))
          ("ADJ" . ((symbol "DF" 1355 . 1357) (semantic-list "(_ADJUST)" 1357 . 1366)))
          ("GUI" . ((symbol "MOD_LGUI" 1475 . 1483)))
          ("WSPC5" . ((symbol "RGUI" 1623 . 1627) (semantic-list "(KC_5)" 1627 . 1633)))
          ("UCODE" . ((symbol "OSL" 1329 . 1332) (semantic-list "(_UNICODE)" 1332 . 1342)))
          ("WSPC6" . ((symbol "RGUI" 1648 . 1652) (semantic-list "(KC_6)" 1652 . 1658)))
          ("WSPC7" . ((symbol "RGUI" 1673 . 1677) (semantic-list "(KC_7)" 1677 . 1683)))
          ("LOWESC" . ((symbol "LT" 1231 . 1233) (semantic-list "(_LOWER, KC_ESC)" 1233 . 1249)))
          ("CTL" . ((symbol "MOD_LCTL" 1454 . 1462)))
          ("POUND" . ((symbol "LSFT" 1498 . 1502) (semantic-list "(KC_3)" 1502 . 1508)))
          ("WSPC8" . ((symbol "RGUI" 1698 . 1702) (semantic-list "(KC_8)" 1702 . 1708)))
          ("WSPC9" . ((symbol "RGUI" 1723 . 1727) (semantic-list "(KC_9)" 1727 . 1733)))
          ("PLOVER" . ((symbol "DF" 1409 . 1411) (semantic-list "(_PLOVER)" 1411 . 1420)))
          ("RAISE" . ((symbol "MO" 1143 . 1145) (semantic-list "(_RAISE)" 1145 . 1153)))
          )
))
  :file "!home!jtarchalski!keebs!qmk_firmware!keyboards!arm_handwire!preonic!keymaps!default!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
